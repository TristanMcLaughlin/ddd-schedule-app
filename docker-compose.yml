services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: ddd-schedule-app-web
    restart: unless-stopped
    working_dir: /opt/src
    volumes:
      - ./src:/opt/src
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
    env_file:
      - ./src/.env
    networks:
      - app-network

  web:
    image: nginx:latest
    container_name: ddd-schedule-app-nginx
    restart: unless-stopped
    ports:
      - "${PORT:-80}:80"
    volumes:
      - ./src:/opt/src
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docker/fastcgi-php.conf:/etc/nginx/snippets/fastcgi-php.conf
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: ddd-schedule-app-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network

  redis:
    image: redis:7.2
    container_name: ddd-schedule-app-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
